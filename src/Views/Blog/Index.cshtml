@model IAsyncEnumerable<Post>
@inject IOptionsSnapshot<BlogSettings> settings
@{
    int currentPage = int.Parse(ViewContext.RouteData.Values[Constants.page] as string ?? "0");

    int totalPosts;
    totalPosts = int.TryParse(ViewData[Constants.TotalPostCount].ToString(), out totalPosts) ? totalPosts : 0;

    int totalPages = (totalPosts / this.settings.Value.PostsPerPage) - (totalPosts % this.settings.Value.PostsPerPage == 0 ? 1 : 0);
}

@if (ViewData[Constants.TagFilter] != null)
{
	<div class="container filter">
		Filter:
		<svg width="24" height="24" aria-hidden="true" role="img" focusable="false" viewBox="0 0 24 24">
			<path d="M21.41 11.58l-9-9C12.05 2.22 11.55 2 11 2H4c-1.1 0-2 .9-2 2v7c0 .55.22 1.05.59 1.42l9 9c.36.36.86.58 1.41.58.55 0 1.05-.22 1.41-.59l7-7c.37-.36.59-.86.59-1.41 0-.55-.23-1.06-.59-1.42zM5.5 7C4.67 7 4 6.33 4 5.5S4.67 4 5.5 4 7 4.67 7 5.5 6.33 7 5.5 7z" fill="gray"></path>
			<path d="M0 0h24v24H0z" fill="none"></path>
		</svg>
		@ViewData[Constants.TagFilter].ToString()
	</div>
}
@if (ViewData[Constants.CatFilter] != null)
{
	<div class="container filter">
		Filter:
		<svg width="24" height="24" aria-hidden="true" role="img" focusable="false" viewBox="0 0 24 24">
			<path d="M10 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2h-8l-2-2z" fill="gray"></path>
			<path d="M0 0h24v24H0z" fill="none"></path>
		</svg>
		@ViewData[Constants.CatFilter].ToString()
	</div>
}

<nav class="pagination container" aria-label="Pagination">
    @if ((await Model.AnyAsync()) && currentPage < totalPages)
    {
        <a rel="prev" href="@Url.Content("~" + ViewData[Constants.prev])" title="Ältere Beiträge anzeigen">&laquo; Ältere Beiträge</a>
    }
    @if (currentPage > 0)
    {
        <a rel="next" href="@Url.Content("~" + ViewData[Constants.next])" title="Neuere Beiträge anzeigen">Neuere Beiträge &raquo;</a>
    }
</nav>

@await foreach (var post in Model)
{
    await Html.RenderPartialAsync("Post.cshtml", post);
}

<nav class="pagination container" aria-label="Pagination">
    @if ((await Model.AnyAsync()) && currentPage < totalPages)
    {
        <a rel="prev" href="@Url.Content("~" + ViewData[Constants.prev])" title="Ältere Beiträge anzeigen">&laquo; Ältere Beiträge</a>
    }
    @if (currentPage > 0)
    {
        <a rel="next" href="@Url.Content("~" + ViewData[Constants.next])" title="Neuere Beiträge anzeigen">Neuere Beiträge &raquo;</a>
    }
    <br /><br />

    @section Head {
        @if ((await Model.AnyAsync()) && currentPage < totalPages)
        {
            <link rel="prev" href="@Url.Content("~" + ViewData[Constants.prev])" />
        }
        @if (currentPage > 0)
        {
            <link rel="next" href="@Url.Content("~" + ViewData[Constants.next])" />
        }
    }
</nav>

@{await Html.RenderPartialAsync("_SocialSharing", ViewData[Constants.Title]);}
